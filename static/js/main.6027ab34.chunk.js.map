{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPHABET","sort","currentGood","nextGood","localeCompare","LENGTH","length","NONE","reverse","App","useState","sortBy","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAEzB,OAAQC,GACN,KAAKJ,EAASO,SACZD,EAAaE,MAAK,SAACC,EAAaC,GAAd,OAChBD,EAAYE,cAAcD,MAE5B,MAEF,KAAKV,EAASY,OACZN,EAAaE,MAAK,SAACC,EAAaC,GAAd,OAChBD,EAAYI,OAASH,EAASG,UAIlC,KAAKb,EAASc,MAShB,OAJIT,GACFC,EAAaS,UAGRT,G,SAvCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA0CE,IAAMgB,EAAgB,WAC3B,MAA2BC,mBAASjB,EAASc,MAA7C,mBAAOV,EAAP,KAAiBc,EAAjB,KACA,EAA8BD,oBAAS,GAAvC,mBAAOZ,EAAP,KAAmBU,EAAnB,KAEA,OACE,sBAAKI,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYjB,IAAaJ,EAASO,WAEtCe,QAAS,WACPJ,EAAOlB,EAASO,WARpB,iCAcA,wBACEa,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYjB,IAAaJ,EAASY,SAEtCU,QAAS,WACPJ,EAAOlB,EAASY,SARpB,4BAcA,wBACEQ,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAahB,IAEjBiB,QAAS,WACPP,GAAQ,WACN,OAAQV,MATd,sBAiBGD,IAAaJ,EAASc,MAAQT,IAE7B,wBACEe,KAAK,SACLD,UAAU,mBACVG,QAAS,WACPJ,EAAOlB,EAASc,MAChBC,GAAQ,IALZ,sBAcN,6BAEIb,EAAkBD,EAAiB,CAAEG,WAAUC,eAC5CkB,KAAI,SAACC,GACJ,OACE,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YClIzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6027ab34.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((currentGood, nextGood) => (\n        currentGood.localeCompare(nextGood)\n      ));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((currentGood, nextGood) => (\n        currentGood.length - nextGood.length\n      ));\n      break;\n\n    case SortType.NONE:\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, sortBy] = useState(SortType.NONE);\n  const [isReversed, reverse] = useState(false);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={() => {\n            sortBy(SortType.ALPHABET);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={() => {\n            sortBy(SortType.LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={() => {\n            reverse(() => {\n              return !isReversed;\n            });\n          }}\n        >\n          Reverse\n        </button>\n\n        {\n          (sortType !== SortType.NONE || isReversed)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger\"\n              onClick={() => {\n                sortBy(SortType.NONE);\n                reverse(false);\n              }}\n            >\n              Reset\n            </button>\n          )\n        }\n      </div>\n\n      <ul>\n        {\n          getReorderedGoods(goodsFromServer, { sortType, isReversed })\n            .map((good) => {\n              return (\n                <li key={good} data-cy=\"Good\">\n                  {good}\n                </li>\n              );\n            })\n        }\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}