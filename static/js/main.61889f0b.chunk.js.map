{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","currentGoods","nextGoods","ALPHABET","localeCompare","LENGTH","length","reverse","App","useState","NONE","sortBy","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAiBzB,OAfAG,EAAaC,MAAK,SAACC,EAAcC,GAC/B,OAAQL,GACN,KAAKJ,EAASU,SACZ,OAAOF,EAAaG,cAAcF,GACpC,KAAKT,EAASY,OACZ,OAAOJ,EAAaK,OAASJ,EAAUI,OACzC,QACE,OAAO,MAITR,GACFC,EAAaQ,UAGRR,G,SAhCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAmCE,IAAMe,EAAgB,WAC3B,MAA2BC,mBAAShB,EAASiB,MAA7C,mBAAOb,EAAP,KAAiBc,EAAjB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOX,EAAP,KAAmBS,EAAnB,KAEA,OACE,sBAAKK,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYjB,IAAaJ,EAASU,WAEtCY,QAAS,WACPJ,EAAOlB,EAASU,WARpB,iCAcA,wBACEU,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYjB,IAAaJ,EAASY,SAEtCU,QAAS,WACPJ,EAAOlB,EAASY,SARpB,4BAcA,wBACEQ,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAahB,IAEjBiB,QAAS,WACPR,GAAQ,WACN,OAAQT,MATd,sBAiBGD,IAAaJ,EAASiB,MAAQZ,IAE7B,wBACEe,KAAK,SACLD,UAAU,mBACVG,QAAS,WACPJ,EAAOlB,EAASiB,MAChBH,GAAQ,IALZ,sBAcN,6BAEIZ,EAAkBD,EAAiB,CAAEG,WAAUC,eAC5CkB,KAAI,SAACC,GACJ,OACE,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YC3HzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.61889f0b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((currentGoods, nextGoods) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return currentGoods.localeCompare(nextGoods);\n      case SortType.LENGTH:\n        return currentGoods.length - nextGoods.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, sortBy] = useState(SortType.NONE);\n  const [isReversed, reverse] = useState(false);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={() => {\n            sortBy(SortType.ALPHABET);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={() => {\n            sortBy(SortType.LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={() => {\n            reverse(() => {\n              return !isReversed;\n            });\n          }}\n        >\n          Reverse\n        </button>\n\n        {\n          (sortType !== SortType.NONE || isReversed)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger\"\n              onClick={() => {\n                sortBy(SortType.NONE);\n                reverse(false);\n              }}\n            >\n              Reset\n            </button>\n          )\n        }\n      </div>\n\n      <ul>\n        {\n          getReorderedGoods(goodsFromServer, { sortType, isReversed })\n            .map((good) => {\n              return (\n                <li key={good} data-cy=\"Good\">\n                  {good}\n                </li>\n              );\n            })\n        }\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}